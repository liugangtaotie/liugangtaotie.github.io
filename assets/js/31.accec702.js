(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{670:function(e,r,t){e.exports=t.p+"assets/img/micro-app-principle.4489e068.png"},771:function(e,r,t){"use strict";t.r(r);var o=t(4),a=Object(o.a)({},(function(){var e=this,r=e.$createElement,o=e._self._c||r;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("Boxx",{attrs:{changeTime:"5000"}}),e._v(" "),o("h2",{attrs:{id:"总方针-是什么-从哪里来-要到哪里去"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#总方针-是什么-从哪里来-要到哪里去"}},[e._v("#")]),e._v(" 总方针：是什么？从哪里来？要到哪里去？")]),e._v(" "),o("h2",{attrs:{id:"一-是什么"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#一-是什么"}},[e._v("#")]),e._v(" 一. 是什么？")]),e._v(" "),o("h3",{attrs:{id:"关于micro-app"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#关于micro-app"}},[e._v("#")]),e._v(" "),o("a",{attrs:{href:"https://zeroing.jd.com/micro-app/docs.html#/?id=%E5%85%B3%E4%BA%8Emicro-app",target:"_blank",rel:"noopener noreferrer"}},[e._v("关于micro-app"),o("OutboundLink")],1)]),e._v(" "),o("p",[e._v("在"),o("code",[e._v("micro-app")]),e._v("之前，业内已经有一些开源的微前端框架，比较流行的有2个："),o("code",[e._v("single-spa")]),e._v("和"),o("code",[e._v("qiankun")]),e._v("。")]),e._v(" "),o("p",[o("code",[e._v("single-spa")]),e._v("是通过监听 url change 事件，在路由变化时匹配到渲染的子应用并进行渲染，这个思路也是目前实现微前端的主流方式。同时"),o("code",[e._v("single-spa")]),e._v("要求子应用修改渲染逻辑并暴露出三个方法："),o("code",[e._v("bootstrap")]),e._v("、"),o("code",[e._v("mount")]),e._v("、"),o("code",[e._v("unmount")]),e._v("，分别对应初始化、渲染和卸载，这也导致子应用需要对入口文件进行修改。因为"),o("code",[e._v("qiankun")]),e._v("是基于"),o("code",[e._v("single-spa")]),e._v("进行封装，所以这些特点也被"),o("code",[e._v("qiankun")]),e._v("继承下来，并且需要对webpack配置进行一些修改。")]),e._v(" "),o("p",[o("code",[e._v("micro-app")]),e._v("并没有沿袭"),o("code",[e._v("single-spa")]),e._v("的思路，而是借鉴了WebComponent的思想，通过CustomElement结合自定义的ShadowDom，将微前端封装成一个类WebComponent组件，从而实现微前端的组件化渲染。并且由于自定义ShadowDom的隔离特性，"),o("code",[e._v("micro-app")]),e._v("不需要像"),o("code",[e._v("single-spa")]),e._v("和"),o("code",[e._v("qiankun")]),e._v("一样要求子应用修改渲染逻辑并暴露出方法，也不需要修改webpack配置，是目前市面上接入微前端成本最低的方案。")]),e._v(" "),o("h3",{attrs:{id:"micro-app的优势"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#micro-app的优势"}},[e._v("#")]),e._v(" "),o("a",{attrs:{href:"https://zeroing.jd.com/micro-app/docs.html#/?id=micro-app%E7%9A%84%E4%BC%98%E5%8A%BF",target:"_blank",rel:"noopener noreferrer"}},[e._v("micro-app的优势"),o("OutboundLink")],1)]),e._v(" "),o("h4",{attrs:{id:"_1、使用简单"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_1、使用简单"}},[e._v("#")]),e._v(" "),o("a",{attrs:{href:"https://zeroing.jd.com/micro-app/docs.html#/?id=_1%E3%80%81%E4%BD%BF%E7%94%A8%E7%AE%80%E5%8D%95",target:"_blank",rel:"noopener noreferrer"}},[e._v("1、使用简单"),o("OutboundLink")],1)]),e._v(" "),o("p",[e._v("我们将所有功能都封装到一个类WebComponent组件中，从而实现在基座应用中嵌入一行代码即可渲染一个微前端应用。")]),e._v(" "),o("p",[e._v("同时"),o("code",[e._v("micro-app")]),e._v("还提供了"),o("code",[e._v("js沙箱")]),e._v("、"),o("code",[e._v("样式隔离")]),e._v("、"),o("code",[e._v("元素隔离")]),e._v("、"),o("code",[e._v("预加载")]),e._v("、"),o("code",[e._v("数据通信")]),e._v("、"),o("code",[e._v("静态资源补全")]),e._v("等一系列完善的功能。")]),e._v(" "),o("h4",{attrs:{id:"_2、零依赖"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_2、零依赖"}},[e._v("#")]),e._v(" "),o("a",{attrs:{href:"https://zeroing.jd.com/micro-app/docs.html#/?id=_2%E3%80%81%E9%9B%B6%E4%BE%9D%E8%B5%96",target:"_blank",rel:"noopener noreferrer"}},[e._v("2、零依赖"),o("OutboundLink")],1)]),e._v(" "),o("p",[o("code",[e._v("micro-app")]),e._v("没有任何依赖，这赋予它小巧的体积和更高的扩展性。")]),e._v(" "),o("h4",{attrs:{id:"_3、兼容所有框架"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_3、兼容所有框架"}},[e._v("#")]),e._v(" "),o("a",{attrs:{href:"https://zeroing.jd.com/micro-app/docs.html#/?id=_3%E3%80%81%E5%85%BC%E5%AE%B9%E6%89%80%E6%9C%89%E6%A1%86%E6%9E%B6",target:"_blank",rel:"noopener noreferrer"}},[e._v("3、兼容所有框架"),o("OutboundLink")],1)]),e._v(" "),o("p",[e._v("为了保证各个业务之间独立开发、独立部署的能力，"),o("code",[e._v("micro-app")]),e._v("做了诸多兼容，在任何技术框架中都可以正常运行。")]),e._v(" "),o("h3",{attrs:{id:"原理"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[e._v("#")]),e._v(" 原理")]),e._v(" "),o("ul",[o("li",[e._v("micro-app 是基于 类webComponent + HTML Entry实现的微前端框架")])]),e._v(" "),o("p",[o("img",{attrs:{src:t(670),alt:"Image text"}})]),e._v(" "),o("p",[e._v("官方介绍：通过自定义元素micro-app的生命周期函数connectedCallback监听元素被渲染，加载子应用的html并转换为DOM结构，递归查询所有js和css等静态资源并加载，设置元素隔离，拦截所有动态创建的script、link等标签，提取标签内容。将加载的js经过插件系统处理后放入沙箱中运行，对css资源进行样式隔离，最后将格式化后的元素放入micro-app中，最终将micro-app元素渲染为一个微前端的子应用。在渲染的过程中，会执行开发者绑定的生命周期函数，用于进一步操作。")]),e._v(" "),o("p",[e._v("关于HTML Entry：相信用过qiankun 的童鞋应该都很熟悉，就是加载微应用的入口文件，一方面对微应用的静态资源js、CSS等文件进行fetch，一方面渲染微应用的dom")]),e._v(" "),o("p",[e._v("类WebComponent：我们在上一节学习web Component中了解到两个特征：CustomElement和 ShadowDom，前者使得我们可以创建自定义标签，后者则促使我们可以创建支持隔离样式和元素隔离的阴影DOM。而首次提及的「类WebComponent」是个啥玩意？本质上就是通过使用CustomElement结合自定义的ShadowDom实现WebComponent基本一致的功能")]),e._v(" "),o("h2",{attrs:{id:"推荐的官方文档"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#推荐的官方文档"}},[e._v("#")]),e._v(" 推荐的官方文档")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://zeroing.jd.com/micro-app/docs.html#/zh-cn/start",target:"_blank",rel:"noopener noreferrer"}},[e._v("micro-app 官网"),o("OutboundLink")],1)]),e._v(" "),o("p",[o("a",{attrs:{href:"https://mp.weixin.qq.com/s/CD_xmytZUx5Qrt6vrKN-zg",target:"_blank",rel:"noopener noreferrer"}},[e._v("这种微前端设计思维听说过吗？"),o("OutboundLink")],1)]),e._v(" "),o("p",[o("a",{attrs:{href:"https://mp.weixin.qq.com/s/oI6InGJ3M_opH368eVXHYA",target:"_blank",rel:"noopener noreferrer"}},[e._v("接入成本最低微前端框架 京东零售micro-app开源了！"),o("OutboundLink")],1)]),e._v(" "),o("p",[o("a",{attrs:{href:"https://mp.weixin.qq.com/s/6l9SwYCXdiEVO5dXdGyvbQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("初探 MicroApp，一个极致简洁的微前端框架"),o("OutboundLink")],1)])],1)}),[],!1,null,null,null);r.default=a.exports}}]);